#######
# ENV #
#######

# - SCALA BUILD TOOL -
# Tell sbt to not use any other repositories than the ones specified in ~/.sbt/repositories
SBT_OPTS_VAL="-Dsbt.override.build.repos=true"

export SBT_OPTS=$SBT_OPTS_VAL

# Tell sbt launcher where to read the ivy credentials, so that is uses them when fetching new SBT versions
export SBT_CREDENTIALS="$HOME/.ivy2/.credentials"

alias ondebug='export SBT_OPTS="$SBT_OPTS -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"'
alias offdebug='SBT_OPTS="$SBT_OPTS_VAL"'

# - RUSTUP -
# Find where Rust should be
# source $HOME/.cargo/env

# - NODE VERSION MANAGER -
export NVM_DIR="$HOME/.nvm"
. "/usr/local/opt/nvm/nvm.sh"

export FZF_DEFAULT_OPTS="--height 40% --reverse --border --ansi --preview 'head -32 {}'"

export FZF_DEFAULT_COMMAND='fd --type file --follow --color=always --hidden --exclude .git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# [ -f ~/.fzf.bash ] && source ~/.fzf.bash

# if [ -x "$(command -v rbenv)" ]; then
#   eval "$(rbenv init -)"
# fi

# if [ -x "$(command -v rvm)" ]; then
#   source /Users/Max/.rvm/scripts/rvm
# fi

precmd() {
  # sets the tab title to current dir
  echo -ne "\e]1;${PWD##*/}\a"
}

############
# DROP-INS #
############

if [ -x "$(command -v exa)" ]; then
   alias ls="exa"
   # sane default "exa -bghHliS"
   alias lsa="ls --all --long --binary --header --time modified --git"
else
   alias lsa="ls -alhG"
fi

if [ -x "$(command -v nvim)" ]; then
   alias vim="nvim"
fi

if [ -x "$(command -v emacs-25.2)" ]; then
   alias emacs=emacs-25.2
fi

if [ -x "$(command -v ccat)" ]; then
   alias cat='ccat --bg="dark"'
fi

alias cdw='fasd -e cd'

#########
# UTILS #
#########

alias subf="subl --command toggle_full_screen" # (sub)lime (f)ullscreen
alias htopp="sudo htop --delay=300"
alias begone-thot="rm -rf"
alias ydsh="yarn run dev-server-hot"

github-clone() {
   git clone "https://github.com/MaxwellBo/$1"
}

# https://stackoverflow.com/a/25620447/5835579
alias xmlextract="sed -e 's/<[^>]\{1,\}>//g; s/[^[:print:]]\{1,\}//g'"

docx() { unzip -p $1 word/document.xml | xmlextract }

docxn() { unzip -p $1 word/document.xml | sed -e 's/<\/w:p>/\n/g; s/<[^>]\{1,\}>//g; s/[^[:print:]\n]\{1,\}//g' }

###############
# FAT FINGERS #
###############

alias ripgrep="rg"
alias rgrep="rg"
alias rgl="rg --fixed-strings" # Treat the pattern as a literal string instead of a regular expression
alias clip-copy="pbcopy"
alias clip-paste="pbpaste"
alias fff="fzf"
ffv() { vim $(fzf) }


##########
# FIXES ##
##########

# unalias mysql

##########
# PYTHON #
##########

alias localhost="python3 -m http.server"
alias workon="source .venv/bin/activate"
alias workoff="deactivate"
alias makevenv="python3 -m venv .venv && source .venv/bin/activate"

##############
# CONTAINERS #
##############

alias nots="jupyter notebook --script"
alias notc="jupyter nbconvert"

#######
# GIT #
#######

# Git commit all prime
alias gcap="git commit --all --verbose"


alias git-precommit="git diff --cached --diff-algorithm=minimal -w"

# http://gggritso.com/human-git-aliases
alias git-branches="git branch -a"
alias git-tags="git tag"
alias git-stashes="git stash list"

alias git-return-HEAD-to-staging="git reset --soft HEAD\^"
alias git-unstage="git reset -q HEAD --"
alias git-discard="git checkout --"
alias git-uncommit="git reset --mixed HEAD~"
alias git-amend="git commit --amend --verbose"

alias git-nevermind="!git reset --hard HEAD && git clean -d -f"

alias git-adog="git log --all --decorate --oneline --graph"
alias git-graph="git log --graph -10 --branches --remotes --tags  --format=format:'%Cgreen%h %Cresetâ€¢ %<(75,trunc)%s (%cN, %cr) %Cred%d' --date-order"

# http://gitless.com/
alias git-cloak="git update-index --assume-unchanged"
alias git-uncloak="git update-index --no-assume-unchanged"

# https://sethrobertson.github.io/GitFixUm/fixup.html
alias git-peel="git reset HEAD^"

git-make-like-remote() {
   git fetch origin && git reset --hard origin/`git rev-parse --abbrev-ref HEAD`
}

git-rebase-off-dev() {
   git checkout dev && git pull && git checkout - && git rebase -i dev
}

alias git-diff-inline="git diff --word-diff=color"

#######
# GCC #
#######

alias gcc-uq="gcc -Wall -pedantic -std=gnu99"

# http://stackoverflow.com/questions/3375697/useful-gcc-flags-for-c
alias gcc-norm="
clang \
-Wall \
-Wextra \
-Wpedantic \
-Wshadow \
-Wstrict-prototypes \
-Wmisleading-indentation" # (c)ompile (C) (n)ormal (f)lags

alias gcc-strict="
ccwf \
-Wundef \
-Wfloat-equal \
-Wpointer-arith \
-Wcast-align \
-Wwrite-strings \
-Waggregate-return" # (c)ompile (C) (s)trict (f)lags


alias tanda-server='ssh deployer@local.tanda.co "bash -lc '/home/deployer/server/start'"'
alias tanda-worker='ssh deployer@local.tanda.co "bash -lc '/home/deployer/server/worker'"'
alias tanda-console='ssh deployer@local.tanda.co "bash -lc '/home/deployer/server/console'"'
alias tanda-bundle='ssh deployer@local.tanda.co "bash -lc '/home/deployer/server/bundle'"'
alias tanda-upload-images='ssh deployer@local.tanda.co "bash -lc '/home/deployer/server/upload-images'"'
alias tanda-test='ssh deployer@local.tanda.co "bash -lc '/home/deployer/server/test'"'
alias tanda-ssh='ssh -A ruby@13.210.176.82'
alias tanda-sync='cd ~/code/payaus && ./useful_scripts/dev-server/sync-aws.sh charliegroves'
alias tssh='ssh ruby@52.64.160.71'
alias tanda-remote-ssh='ssh ruby@13.210.176.82'
alias boyztown-ssh='ssh -i ~/keys/minecraft-server.pem ubuntu@boyztown.net'
